services:
  # Backend Spring Boot service
  backend:
    build:
      context: ./bqomis-backend
      dockerfile: Dockerfile
    container_name: bqomis-backend
    # If you want to automatically load a local .env file during development
    # uncomment the next line (do NOT use this in production if it contains secrets)
    # env_file: .env
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/bqomis_db
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
      - caddy_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Frontend React/Nginx service
  frontend:
    build:
      context: ./bqomis-frontend
      dockerfile: Dockerfile
    container_name: bqomis-frontend
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app_network
      - caddy_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: bqomis-postgres
    environment:
      - POSTGRES_DB=bqomis_db
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d bqomis_db"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:
    driver: local

networks:
  # Internal network for app communication
  app_network:
    driver: bridge
    internal: false
  
  # External network for Caddy reverse proxy
  caddy_network:
    external: true